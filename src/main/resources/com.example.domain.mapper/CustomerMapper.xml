<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.domain.mapper.CustomerMapper">

    <!-- resultMapの定義 -->
    <resultMap id="CustomerResultMap" type="com.example.domain.model.Customer">
        <id property="customerId" column="customer_id" />
        <result property="lastName" column="last_name" />
        <result property="firstName" column="first_name" />
        <result property="phoneNumber" column="phone_number" />
        <result property="email" column="email" />
        <result property="address" column="address" />
        <result property="membershipLevel" column="membership_level" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

    <!-- findAll メソッドのための SELECT クエリ -->
    <select id="findAll" resultMap="CustomerResultMap">
        SELECT 
            customer_id, 
            last_name, 
            first_name, 
            phone_number, 
            email, 
            address, 
            membership_level, 
            created_at, 
            updated_at
        FROM customer
    </select>

    <!-- findById メソッドのための SELECT クエリ -->
    <select id="findById" parameterType="int" resultMap="CustomerResultMap">
        SELECT 
            customer_id, 
            last_name, 
            first_name, 
            phone_number, 
            email, 
            address, 
            membership_level, 
            created_at, 
            updated_at
        FROM customer 
        WHERE customer_id = #{id}
    </select>

    <!-- insert メソッドのための INSERT クエリ -->
    <insert id="insert" parameterType="com.example.domain.model.Customer">
        INSERT INTO customer 
        (last_name, first_name, phone_number, email, address, membership_level)
        VALUES 
        (#{lastName}, #{firstName}, #{phoneNumber}, #{email}, #{address}, #{membershipLevel})
    </insert>

    <!-- update メソッドのための UPDATE クエリ -->
    <update id="update" parameterType="com.example.domain.model.Customer">
        UPDATE customer
        SET 
            last_name = #{lastName}, 
            first_name = #{firstName}, 
            phone_number = #{phoneNumber},
            email = #{email}, 
            address = #{address}, 
            membership_level = #{membershipLevel}
        WHERE customer_id = #{customerId}
    </update>

    <!-- delete メソッドのための DELETE クエリ -->
    <delete id="deleteById" parameterType="int">
        DELETE FROM customer WHERE customer_id = #{id}
    </delete>

</mapper>
